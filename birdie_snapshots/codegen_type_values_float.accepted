---
version: 1.2.1
title: codegen_type_values_float
file: ./test/json_typedef_test.gleam
test_name: codegen_type_values_float_test
---
RootSchema(
  [],
  Values(
    False,
    [],
    Type(False, [], Float32),
  ),
)

-----------------------------------------------------------

import decode
import gleam/dict
import gleam/dynamic

pub fn decode(data: dynamic.Dynamic) -> decode.Decoder(dict.Dict(String, Float)) {
  decode.dict(decode.string, decode.float)
  |> decode.from(data)
}

pub fn to_json(data: dict.Dict(String, Float)) -> json.Json {
  helper__dict_to_json(data, json.float)
}

fn helper__dict_to_json(
  data: dict.Dict(String, t),
  to_json: fn(t) -> json.Json,
) -> json.Json {
  data
  |> dict.to_list
  |> list.map(fn(pair) { #(pair.0, to_json(pair.1)) })
  |> json.object
}